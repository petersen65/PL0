{ demonstrate conditions }

var x, y;
begin
    x := 3;
    y := 3;

    if x > y then
        ! y;

    if x >= y then
        ! y;

    if x < y then
        ! x;

    if x <= y then
        ! x;

    if x = y then
        ! x + y;

    if x # y then
        ! x - y;

    if (1 + 2) * 3 + 4 * ((1 + 2) * (3 + 4) - 2 * ((1 + (3 + (2 * 2))) * (3 + 4))) <=
       1 + 2 * 3 + 4 + 4 / 2 * 6 + 2 * 3 - 3 - +4 + -2 - -2 * 6 / 3 * 5 * 2 - 5 * 5 then
    begin
        ! (1 + 2) * 3 + 4 * ((1 + 2) * (3 + 4) - 2 * ((1 + (3 + (2 * 2))) * (3 + 4)));
        ! 1 + 2 * 3 + 4 + 4 / 2 * 6 + 2 * 3 - 3 - +4 + -2 - -2 * 6 / 3 * 5 * 2 - 5 * 5
    end;

    x := -2;
    y := -1;
    ! x;
    ! y;

    while x + y < 3 do
    begin
        x := x + 1;
        y := y + 1;
        ! x;
        ! y;
    end;

    if odd -3 * 4 + 3 * 5 - 6 + 7 * (2 + 4) + 4 + (2 - 4 + 6 / 2) + 1 - 2 then
        ! -3 * 4 + 3 * 5 - 6 + 7 * (2 + 4) + 4 + (2 - 4 + 6 / 2) + 1 - 2;

    x := 3;
    ! x;

    while odd x do
    begin
        x := x + 1;
        ! x;
    end;

    {
        Correct output is:
            3
            3
            6
            -355
            35
            -2
            -1
            -1
            0
            0
            1
            1
            2
            43
            3
            4
    }
end.
